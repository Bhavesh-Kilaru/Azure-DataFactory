{
	"name": "multiple_tables_to_one_table",
	"properties": {
		"activities": [
			{
				"name": "getting the table names",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_table",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "table_list"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "getting the table names",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('getting the table names').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "getting college",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "college_name",
								"value": {
									"value": "@split(item().table_name, '_')[0]",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Copy data from college tables to main table",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "getting college",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "max id for college tables",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat(' select course_name, course_duration_months, course_fee, ''',\nvariables('college_name'), ''' as college_name from ',item().table_name, '\nwhere course_id > ', activity('max id for college tables').output.firstRow.course_id)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_table",
									"type": "DatasetReference",
									"parameters": {
										"table_name": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_table",
									"type": "DatasetReference",
									"parameters": {
										"table_name": "courses"
									}
								}
							]
						},
						{
							"name": "max id for college tables",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select  course_id from watermark where table_name = ''', item().table_name, '''')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_table",
									"type": "DatasetReference",
									"parameters": {
										"table_name": "watermark"
									}
								}
							}
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "getting course_id to update watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Copy data from college tables to main table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_watermark]",
								"storedProcedureParameters": {
									"course_id": {
										"value": {
											"value": "@activity('getting course_id to update watermark').output.firstRow.course_id",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"tableName": {
										"value": {
											"value": "@item().table_name",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "getting course_id to update watermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select max(course_id) as course_id from ', item().table_name)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_table",
									"type": "DatasetReference",
									"parameters": {
										"table_name": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"college_name": {
				"type": "String"
			},
			"course_id": {
				"type": "Integer"
			},
			"temp_course_id": {
				"type": "Integer"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-07-09T22:26:03Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}